# Задаем версию для сборки OFF - static, ON - shared
option(BUILD_SHARED_LIBS "Build using shared libraries" ON)
message(BUILD_SHARED_LIBS = ${BUILD_SHARED_LIBS})

# Определяем тип сборки для последующего использования
if(BUILD_SHARED_LIBS STREQUAL "ON")
    message(" === Library build set to SHARED")
    set(LIB_LINK_TYPE "shared")
else()
    message(" === Library build set to STATIC")
    set(LIB_LINK_TYPE "static")
endif()

# Задаем пространство имен
set("MAIN_NAMESPACE" "ccon")
set("PROJECT_NAMESPACE" "colorconsole")

# Префикс который используется для файлов конфигурации cmake
set("MY_CMAKE_PREFIX" "colorconsole")

# Имя файла для библиотеки к нему автоматически будет добавлено lib
set("MY_LIB_OUTPUT_NAME" "colorconsole")

# Задаем путь для установки CMake-файлов проекта
set("COLORCONSOLE_INSTALL_CMAKEDIR" "${CMAKE_INSTALL_LIBDIR}/cmake/${MY_CMAKE_PREFIX}" CACHE STRING
    "Install path for colorconsole package-related CMake files"
)

# Имена файлов, содержащие исходный код библиотеки
set(sources
    src/colorconsole.cpp
    src/colorconsole.h
)

# Имя файла с настройками для статической сборки библиотеки
set(targets_file "${MY_CMAKE_PREFIX}-${LIB_LINK_TYPE}-targets.cmake")

# Требования к версии C++ и поддержки стандарта
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

message(" === Settings setup complete")